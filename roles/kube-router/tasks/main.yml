- name: create directory
  file:
    path: "{{ kuberouter_install_path }}/{{ item }}"
    state: directory
  with_items:      
    - 'bin'
    - 'cert'
    - 'data'
    - 'log'

- name: upload config
  notify: update supervisord
  template:
    src: "{{ item }}.j2"
    dest: "{{ kuberouter_install_path }}/{{ item }}"
  with_items:      
    - "kube-router.ini"

- name: upload config
  notify: restart kube-router
  template: 
    src: kubeconfig.yml.j2
    dest: "{{ kuberouter_install_path }}/kubeconfig.yml"

- name: upload kuberouter
  notify: restart kube-router
  copy: 
    src: "{{ item }}"
    dest: "{{ kuberouter_install_path }}/bin/"
    mode: u=rwx
  with_items:
    - "{{ build_path }}/build-kube-router/kube-router/kube-router"

- name: upload certs ca
  notify: restart kube-router
  copy:
    src: "{{ item }}"
    dest: "{{ kuberouter_install_path }}/cert/ca/"
  with_items:
    - "{{ ca_path }}/ca.pem"

- name: upload apiserver client certs 
  notify: restart kube-router
  copy:
    src: "{{ item }}"
    dest: "{{ kuberouter_install_path }}/cert/apiserver-client/"
  with_items:
    - "{{ apiserver_client_certs_kube_router }}/{{ inventory_hostname }}/cert.pem"
    - "{{ apiserver_client_certs_kube_router }}/{{ inventory_hostname }}/key.pem"

- name: upload scripts
  copy:
    src: "{{ item }}"
    dest: "{{ kuberouter_install_path }}/"
    mode: u=rwx
  with_items:
    - start.sh
    - stop.sh

- name: create link
  notify: update supervisord
  file:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    state: link
  with_items:
    - { src: "{{ kuberouter_install_path }}/kube-router.ini", dest: "/etc/supervisord.d/kube-router.ini" }
